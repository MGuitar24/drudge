name: Build and Release drudge

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all tags

      - name: Extract version from Git tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3' 

      - name: Build binary
        run: |
          mkdir -p bin
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags "-X main.Version=${{ env.VERSION }}" \
            -o bin/drudge-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/*

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from Git tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.VERSION }}" 
          name: "drudge release ${{ env.VERSION }}" 
          body: "Automated release of drudge CLI version **${{ env.VERSION }}**."
          draft: false
          prerelease: false
          files: bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}